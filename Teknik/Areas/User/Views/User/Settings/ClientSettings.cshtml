@model Teknik.Areas.Users.ViewModels.ClientSettingsViewModel

@using Teknik.Areas.Users.ViewModels

@{
    Layout = "~/Areas/User/Views/User/Settings/Settings.cshtml";
}

<bundle src="css/user.settings.client.min.css" append-version="true"></bundle>

<script>
    var createClientURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "CreateClient" })';
    var editClientURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "EditClient" })';
    var deleteClientURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "DeleteClient" })';
    var getClientURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "GetClient" })';
</script>

<div class="row">
    <div class="col-sm-12">
        <h2>Clients</h2>
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <span class="pull-right"><button type="button" class="btn btn-default" id="createClient">Create Client</button></span>
        <div class="clearfix"></div>
        <br />
        <div id="clients">
            <ul class="list-group" id="clientList">
                @if (Model.Clients.Any())
                {
                    foreach (ClientViewModel client in Model.Clients)
                    {
                        @await Html.PartialAsync("Settings/ClientView", client)
                    }
                }
                else
                {
                    <li class="list-group-item text-center" id="noClients">No Clients</li>
                }
            </ul>
        </div>
    </div>
</div>


<div class="modal fade" id="clientModal" tabindex="-1" role="dialog" aria-labelledby="clientModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-header-default">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="clientModalLabel">Client Information</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" class="form-control" id="clientId" name="clientId" />
                <div class="row">
                    <div class="col-sm-12 text-center">
                        <div id="clientStatus">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="clientName">Application Name <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="clientName" name="clientName" data-val-required="The Client Name field is required." data-val="true" />
                </div>
                <div class="form-group">
                    <label for="clientCallbackUrl">Homepage URL</label>
                    <input type="text" class="form-control" id="clientHomepageUrl" name="clientHomepageUrl" />
                </div>
                <div class="form-group">
                    <label for="clientLogoUrl">Logo URL</label>
                    <input type="text" class="form-control" id="clientLogoUrl" name="clientLogoUrl" />
                </div>
                <p>
                    <small>
                        The logo will be rendered at a max size of 100x100.
                    </small>
                </p>
                <div class="form-group">
                    <label for="clientCallbackUrl">Authorization callback URL <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="clientCallbackUrl" name="clientCallbackUrl" data-val-required="The Authorization callback URL field is required." data-val="true" />
                </div>
                <div class="form-group" id="grantSection">
                    <label for="grantType">Grant Type</label>
                    <select class="form-control" name="grantType" id="grantType">
                        @foreach (IdentityClientGrant grant in Enum.GetValues(typeof(IdentityClientGrant)))
                        {
                            <!option value="@grant">@grant.GetDescription()</!option>
                        }
                    </select>
                </div>
                <div class="form-group" id="scopeSection">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="glyphicon glyphicon-tasks"></span>
                            Allowed Scopes
                        </div>
                        <ul class="list-group">
                            @foreach (IdentityClientScope scope in Enum.GetValues(typeof(IdentityClientScope)))
                            {

                                <li class="list-group-item abc-checkbox">
                                    <input class="consent-scopecheck @(scope.IsReadOnly() ? "default" : string.Empty)"
                                           type="checkbox"
                                           name="allowedScope"
                                           id="scopes_@scope.GetDisplayName()"
                                           value="@scope.GetDisplayName()"
                                           checked="@scope.IsReadOnly()"
                                           disabled="@scope.IsReadOnly()" />
                                    <label for="ScopesConsented">
                                        <strong>@scope.GetDisplayName()</strong>
                                    </label>
                                    @if (!string.IsNullOrEmpty(scope.GetDescription()))
                                    {
                                        <div class="consent-description">
                                            <label for="scopes_@scope.GetDisplayName()">@scope.GetDescription()</label>
                                        </div>
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button class="btn btn-primary pull-right hidden clientSubmit" id="clientCreateSubmit" type="submit" name="clientCreateSubmit">Create Client</button>
                        <button class="btn btn-primary pull-right hidden clientSubmit" id="clientEditSubmit" type="submit" name="clientEditSubmit">Save Client</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<bundle src="js/user.settings.client.min.js" append-version="true"></bundle>
