@model Teknik.Areas.Users.ViewModels.InviteSettingsViewModel

@using Teknik.Areas.Users.ViewModels

@{
    Layout = "~/Areas/User/Views/User/Settings/Settings.cshtml";
}

<script>
    var createExternalLinkURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "CreateInviteCodeLink" })';
</script>

<div class="row">
    <div class="col-sm-10 col-sm-offset-1">
        <br />
        <label for="availableCodes"><h4>Available Invite Codes</h4></label>
        <div id="availableCodes" style="overflow-y: auto; max-height: 400px;">
            <ul class="list-group" id="availableCodeList">
                @if (Model.AvailableCodes.Any())
                {
                    foreach (InviteCodeViewModel code in Model.AvailableCodes)
                    {
                        @await Html.PartialAsync("Settings/InviteCode", code)
                    }
                }
                else
                {
                    <li class="list-group-item text-center" id="noAvailableCodes">No Invite Codes Available</li>
                }
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-10 col-sm-offset-1">
        <br />
        <label for="claimedCodes"><h4>Claimed Invite Codes</h4></label>
        <div id="claimedCodes" style="overflow-y: auto; max-height: 400px;">
            <ul class="list-group" id="claimedCodeList">
                @if (Model.ClaimedCodes.Any())
                {
                    foreach (InviteCodeViewModel code in Model.ClaimedCodes)
                    {
                        @await Html.PartialAsync("Settings/InviteCode", code)
                    }
                }
                else
                {
                    <li class="list-group-item text-center" id="noClaimedCodes">No Invite Codes have been Claimed</li>
                }
            </ul>
        </div>
    </div>
</div>

<bundle src="js/user.settings.invite.min.js" append-version="true"></bundle>