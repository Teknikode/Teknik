@model Teknik.Areas.Users.ViewModels.UploadSettingsViewModel

@using Teknik.Areas.Users.ViewModels

@{
    Layout = "~/Areas/User/Views/User/Settings/Settings.cshtml";
}

<script>
    var editURL = '@Url.SubRouteUrl("account", "User.Action", new { action = "EditUpload" })';
</script>

<bundle src="css/user.settings.upload.min.css" append-version="true"></bundle>

<!form class="form" action="##" method="post" id="updateForm">

    <div class="row form-horizontal">
        <div class="col-sm-6">
            <div class="form-group form-group-sm" data-toggle="tooltip" data-placement="top" title="When enabled, each file is encrypted before upload using an AES-256-CTR cipher.  A key is generated and required to download the file later.">
                <label for="encrypt" class="col-sm-6 col-xs-3 control-label">Encrypt in Browser</label>
                <div class="col-sm-6 col-xs-9">
                    <input id="update_upload_encrypt" name="update_upload_encrypt" title="whether the file should be encrypted in the browser before upload" type="checkbox" value="true" @(Model.Encrypt ? "checked" : string.Empty) />
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @if (!User.Identity.IsAuthenticated)
                {
                    @:<label class="col-xs-3 control-label" data-toggle="tooltip" data-placement="top" title="Uploads expire after 1 day for unregistered users">Expiration*</label>
                }
                else
                {
                    @:<label class="col-xs-3 control-label">Expiration</label>
                }
                <fieldset @if (!User.Identity.IsAuthenticated) { @: disabled
                          }>
                    <div class="col-xs-4 hidden" id="length-div">
                        <input type="number" min="1" step="1" class="form-control" name="expirelength" id="expirelength" value="@Model.ExpirationLength">
                    </div>
                    <div class="col-xs-9" id="unit-div">
                        <select class="form-control" name="expireunit" id="expireunit">
                            @foreach (ExpirationUnit unit in Enum.GetValues(typeof(ExpirationUnit)))
                            {
                                <!option value="@unit" @(Model.ExpirationUnit == unit ? "selected" : string.Empty)>@unit.ToString()</!option>
                            }
                        </select>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-10">
            <br />
            <button class="btn btn-success" id="update_submit" type="submit">Save</button>
            <button class="btn" type="reset">Reset</button>
        </div>
    </div>
</!form>

<bundle src="js/user.settings.upload.min.js" append-version="true"></bundle>