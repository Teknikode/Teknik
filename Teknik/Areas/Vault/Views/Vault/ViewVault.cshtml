@model Teknik.Areas.Vault.ViewModels.VaultViewModel

@using Teknik.Areas.Vault.ViewModels

<bundle src="css/vault.min.css" append-version="true"></bundle>

<script>
    var helpURL = '@Url.SubRouteUrl("help", "Help.Markdown")';
    var validateItemURL = '@Url.SubRouteUrl(Model.CurrentSub, "Vault.Action", new { action = "ValidateItem" })';
    var modifyVaultURL = '@Url.SubRouteUrl(Model.CurrentSub, "Vault.Action", new { action = "EditVault" })';
    var deleteVaultURL = '@Url.SubRouteUrl(Model.CurrentSub, "Vault.Delete")';
</script>

<div class="container">
    <div class="row text-center">
        <div class="col-sm-12 text-center">
            <h2><b>@((string.IsNullOrEmpty(Model.Title)) ? "Untitled" : Model.Title)</b> <small>Created on <time datetime="@Model.DateCreated.ToString("s")">@Model.DateCreated.ToString("dddd, MMMM d, yyyy") at @Model.DateCreated.ToString("h:mm:ss tt")</time></small></h2>
        </div>
    </div>
    @if (User.Identity.IsAuthenticated &&  Model.User != null && Model.User.Username == User.Identity.Name)
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="pull-right">
                    <a role="button" class="btn btn-primary edit-vault-button" href="@Url.SubRouteUrl("v", "Vault.EditVault", new { url = Model.Url })">Edit</a>&nbsp;
                    <button role="button" class="btn btn-danger delete-vault-button" data-vault-url="@Model.Url">Delete</button>
                </div>
            </div>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.Description))
    {
        <hr />
        <div class="row">
            <div class="col-sm-10 col-sm-offset-1">
                    <p>@Html.Markdown(@Model.Description)</p>
            </div>
        </div>
    }
    <br />

    @foreach (VaultItemViewModel item in Model.Items)
    {
        Type itemType = item.GetType();
        if (itemType == typeof(PasteItemViewModel))
        {
            PasteItemViewModel pasteModel = (PasteItemViewModel)item;

            @await Html.PartialAsync("~/Areas/Vault/Views/Vault/PasteItem.cshtml", pasteModel)
        }
        else if (itemType == typeof(UploadItemViewModel))
        {
            UploadItemViewModel uploadModel = (UploadItemViewModel)item;

            @await Html.PartialAsync("~/Areas/Vault/Views/Vault/UploadItem.cshtml", uploadModel)
        }
        else
        {
            // Nothing to see here folks.  :)
        }
    }
</div>

<bundle src="js/vault.min.js" append-version="true"></bundle>